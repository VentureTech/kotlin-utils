/*
 * Copyright (c) 2019 Interactive Information Research & Development
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

artifactoryPublish.dependsOn createDependencyFile

publishing {
    publications {

        mavenPub(MavenPublication) {
            from components.java

            artifact(sourceJar) {
                classifier "sources"
            }
            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }
        }
    }
}
artifactoryPublish.doFirst {
    if ("${publish_venturetech_username}".trim().isEmpty()) println "Missing property: publish_venturetech_username"
    if ("${publish_venturetech_password}".trim().isEmpty()) println "Missing property: publish_venturetech_password"
}
artifactory {
    contextUrl = publish_venture_tech_url

    publish {
        repository {
            repoKey = (version.isSnapshot() ? publish_venture_tech_snapshot_key : publish_venture_tech_release_key)
            username = publish_venturetech_username
            password = publish_venturetech_password
        }
        defaults {
            publications('mavenPub')
            properties = [
                'status'      : version.status, 'release.status': version.status,
                'build.status': version.status, 'commit': gitinfo.commit,
                'branch'      : gitinfo.branch
            ]
        }
    }
    resolve {
        repository {
            repoKey = 'release'
            username = repo_venturetech_username
            password = repo_venturetech_password
        }
    }

    clientConfig.info.vcsRevision = gitinfo.commit

}
