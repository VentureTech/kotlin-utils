/*
 * Copyright (c) 2019 Interactive Information Research & Development
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import com.proteusframework.build.Version

description = "${app_description}"
buildDir = 'build'
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = new Version(app_version, project)
group = app_group
ext[Version.PROJECT_INFORMATION_PACKAGE] = 'net.proteusframework.kotlinutil.config'

afterEvaluate {
    println "Project: $app_name $version"
}

// Kotlin Configuration
allOpen {
    // Makes classes with this annotation open (spring is taken care of)
}
noArg {
    // Generates a hibernate/JPA no-arg constructor for classes with this annotation
    // Example usage if you desire to use this: annotation('javax.persistence.Entity')
}
